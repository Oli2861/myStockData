package com.mystockdata.financialreportservice.ifrsreports

import com.mystockdata.financialreportservice.financialreportdatasource.Item
import java.math.BigDecimal

data class IFRSStatementOfComprehensiveIncomeByFunctionOfExpense(
    var ifrs_full_Revenue: BigDecimal? = null,
    var ifrs_full_InterestRevenueCalculatedUsingEffectiveInterestMethod: BigDecimal? = null,
    var ifrs_full_CostOfSales: BigDecimal? = null,
    var ifrs_full_GrossProfit: BigDecimal? = null,
    var ifrs_full_OtherIncome: BigDecimal? = null,
    var ifrs_full_DistributionCosts: BigDecimal? = null,
    var ifrs_full_AdministrativeExpense: BigDecimal? = null,
    var ifrs_full_OtherExpenseByFunction: BigDecimal? = null,
    var ifrs_full_OtherGainsLosses: BigDecimal? = null,
    var ifrs_full_ProfitLossFromOperatingActivities: BigDecimal? = null,
    var ifrs_full_DifferenceBetweenCarryingAmountOfDividendsPayableAndCarryingAmountOfNoncashAssetsDistributed: BigDecimal? = null,
    var ifrs_full_GainsLossesOnNetMonetaryPosition: BigDecimal? = null,
    var ifrs_full_GainLossArisingFromDerecognitionOfFinancialAssetsMeasuredAtAmortisedCost: BigDecimal? = null,
    var ifrs_full_FinanceIncome: BigDecimal? = null,
    var ifrs_full_FinanceCosts: BigDecimal? = null,
    var ifrs_full_ImpairmentLossImpairmentGainAndReversalOfImpairmentLossDeterminedInAccordanceWithIFRS9: BigDecimal? = null,
    var ifrs_full_ShareOfProfitLossOfAssociatesAndJointVenturesAccountedForUsingEquityMethod: BigDecimal? = null,
    var ifrs_full_OtherIncomeExpenseFromSubsidiariesJointlyControlledEntitiesAndAssociates: BigDecimal? = null,
    var ifrs_full_GainsLossesArisingFromDifferenceBetweenPreviousCarryingAmountAndFairValueOfFinancialAssetsReclassifiedAsMeasuredAtFairValue: BigDecimal? = null,
    var ifrs_full_CumulativeGainLossPreviouslyRecognisedInOtherComprehensiveIncomeArisingFromReclassificationOfFinancialAssetsOutOfFairValueThroughOtherComprehensiveIncomeIntoFairValueThroughProfitOrLossMeasurementCategory: BigDecimal? = null,
    var ifrs_full_HedgingGainsLossesForHedgeOfGroupOfItemsWithOffsettingRiskPositions: BigDecimal? = null,
    var ifrs_full_ProfitLossBeforeTax: BigDecimal? = null,
    var ifrs_full_IncomeTaxExpenseContinuingOperations: BigDecimal? = null,
    var ifrs_full_ProfitLossFromContinuingOperations: BigDecimal? = null,
    var ifrs_full_ProfitLossFromDiscontinuedOperations: BigDecimal? = null,
    var ifrs_full_ProfitLoss: BigDecimal? = null,
    var ifrs_full_ProfitLossAttributableToOwnersOfParent: BigDecimal? = null,
    var ifrs_full_ProfitLossAttributableToNoncontrollingInterests: BigDecimal? = null,
    var ifrs_full_EarningsPerShareExplanatory: String? = null,
    var ifrs_full_BasicEarningsLossPerShareFromContinuingOperations: BigDecimal? = null,
    var ifrs_full_BasicEarningsLossPerShareFromDiscontinuedOperations: BigDecimal? = null,
    var ifrs_full_BasicEarningsLossPerShare: BigDecimal? = null,
    var ifrs_full_DilutedEarningsLossPerShareFromContinuingOperations: BigDecimal? = null,
    var ifrs_full_DilutedEarningsLossPerShareFromDiscontinuedOperations: BigDecimal? = null,
    var ifrs_full_DilutedEarningsLossPerShare: BigDecimal? = null
    ){
        fun setValue(item: Item) = keyLambdaMap[item.name]?.invoke(this, item)
    }
private val keyLambdaMap = mapOf<String, (IFRSStatementOfComprehensiveIncomeByFunctionOfExpense, Item) -> Unit>(
    "ifrs-full:Revenue" to {statement, item -> statement.ifrs_full_Revenue = item.valueNumeric},
    "ifrs-full:InterestRevenueCalculatedUsingEffectiveInterestMethod" to {statement, item -> statement.ifrs_full_InterestRevenueCalculatedUsingEffectiveInterestMethod = item.valueNumeric},
    "ifrs-full:CostOfSales" to {statement, item -> statement.ifrs_full_CostOfSales = item.valueNumeric},
    "ifrs-full:GrossProfit" to {statement, item -> statement.ifrs_full_GrossProfit = item.valueNumeric},
    "ifrs-full:OtherIncome" to {statement, item -> statement.ifrs_full_OtherIncome = item.valueNumeric},
    "ifrs-full:DistributionCosts" to {statement, item -> statement.ifrs_full_DistributionCosts = item.valueNumeric},
    "ifrs-full:AdministrativeExpense" to {statement, item -> statement.ifrs_full_AdministrativeExpense = item.valueNumeric},
    "ifrs-full:OtherExpenseByFunction" to {statement, item -> statement.ifrs_full_OtherExpenseByFunction = item.valueNumeric},
    "ifrs-full:OtherGainsLosses" to {statement, item -> statement.ifrs_full_OtherGainsLosses = item.valueNumeric},
    "ifrs-full:ProfitLossFromOperatingActivities" to {statement, item -> statement.ifrs_full_ProfitLossFromOperatingActivities = item.valueNumeric},
    "ifrs-full:DifferenceBetweenCarryingAmountOfDividendsPayableAndCarryingAmountOfNoncashAssetsDistributed" to {statement, item -> statement.ifrs_full_DifferenceBetweenCarryingAmountOfDividendsPayableAndCarryingAmountOfNoncashAssetsDistributed = item.valueNumeric},
    "ifrs-full:GainsLossesOnNetMonetaryPosition" to {statement, item -> statement.ifrs_full_GainsLossesOnNetMonetaryPosition = item.valueNumeric},
    "ifrs-full:GainLossArisingFromDerecognitionOfFinancialAssetsMeasuredAtAmortisedCost" to {statement, item -> statement.ifrs_full_GainLossArisingFromDerecognitionOfFinancialAssetsMeasuredAtAmortisedCost = item.valueNumeric},
    "ifrs-full:FinanceIncome" to {statement, item -> statement.ifrs_full_FinanceIncome = item.valueNumeric},
    "ifrs-full:FinanceCosts" to {statement, item -> statement.ifrs_full_FinanceCosts = item.valueNumeric},
    "ifrs-full:ImpairmentLossImpairmentGainAndReversalOfImpairmentLossDeterminedInAccordanceWithIFRS9" to {statement, item -> statement.ifrs_full_ImpairmentLossImpairmentGainAndReversalOfImpairmentLossDeterminedInAccordanceWithIFRS9 = item.valueNumeric},
    "ifrs-full:ShareOfProfitLossOfAssociatesAndJointVenturesAccountedForUsingEquityMethod" to {statement, item -> statement.ifrs_full_ShareOfProfitLossOfAssociatesAndJointVenturesAccountedForUsingEquityMethod = item.valueNumeric},
    "ifrs-full:OtherIncomeExpenseFromSubsidiariesJointlyControlledEntitiesAndAssociates" to {statement, item -> statement.ifrs_full_OtherIncomeExpenseFromSubsidiariesJointlyControlledEntitiesAndAssociates = item.valueNumeric},
    "ifrs-full:GainsLossesArisingFromDifferenceBetweenPreviousCarryingAmountAndFairValueOfFinancialAssetsReclassifiedAsMeasuredAtFairValue" to {statement, item -> statement.ifrs_full_GainsLossesArisingFromDifferenceBetweenPreviousCarryingAmountAndFairValueOfFinancialAssetsReclassifiedAsMeasuredAtFairValue = item.valueNumeric},
    "ifrs-full:CumulativeGainLossPreviouslyRecognisedInOtherComprehensiveIncomeArisingFromReclassificationOfFinancialAssetsOutOfFairValueThroughOtherComprehensiveIncomeIntoFairValueThroughProfitOrLossMeasurementCategory" to {statement, item -> statement.ifrs_full_CumulativeGainLossPreviouslyRecognisedInOtherComprehensiveIncomeArisingFromReclassificationOfFinancialAssetsOutOfFairValueThroughOtherComprehensiveIncomeIntoFairValueThroughProfitOrLossMeasurementCategory = item.valueNumeric},
    "ifrs-full:HedgingGainsLossesForHedgeOfGroupOfItemsWithOffsettingRiskPositions" to {statement, item -> statement.ifrs_full_HedgingGainsLossesForHedgeOfGroupOfItemsWithOffsettingRiskPositions = item.valueNumeric},
    "ifrs-full:ProfitLossBeforeTax" to {statement, item -> statement.ifrs_full_ProfitLossBeforeTax = item.valueNumeric},
    "ifrs-full:IncomeTaxExpenseContinuingOperations" to {statement, item -> statement.ifrs_full_IncomeTaxExpenseContinuingOperations = item.valueNumeric},
    "ifrs-full:ProfitLossFromContinuingOperations" to {statement, item -> statement.ifrs_full_ProfitLossFromContinuingOperations = item.valueNumeric},
    "ifrs-full:ProfitLossFromDiscontinuedOperations" to {statement, item -> statement.ifrs_full_ProfitLossFromDiscontinuedOperations = item.valueNumeric},
    "ifrs-full:ProfitLoss" to {statement, item -> statement.ifrs_full_ProfitLoss = item.valueNumeric},
    "ifrs-full:ProfitLossAttributableToOwnersOfParent" to {statement, item -> statement.ifrs_full_ProfitLossAttributableToOwnersOfParent = item.valueNumeric},
    "ifrs-full:ProfitLossAttributableToNoncontrollingInterests" to {statement, item -> statement.ifrs_full_ProfitLossAttributableToNoncontrollingInterests = item.valueNumeric},
    "ifrs-full:EarningsPerShareExplanatory" to {statement, item -> statement.ifrs_full_EarningsPerShareExplanatory = item.value},
    "ifrs-full:BasicEarningsLossPerShareFromContinuingOperations" to {statement, item -> statement.ifrs_full_BasicEarningsLossPerShareFromContinuingOperations = item.valueNumeric},
    "ifrs-full:BasicEarningsLossPerShareFromDiscontinuedOperations" to {statement, item -> statement.ifrs_full_BasicEarningsLossPerShareFromDiscontinuedOperations = item.valueNumeric},
    "ifrs-full:BasicEarningsLossPerShare" to {statement, item -> statement.ifrs_full_BasicEarningsLossPerShare = item.valueNumeric},
    "ifrs-full:DilutedEarningsLossPerShareFromContinuingOperations" to {statement, item -> statement.ifrs_full_DilutedEarningsLossPerShareFromContinuingOperations = item.valueNumeric},
    "ifrs-full:DilutedEarningsLossPerShareFromDiscontinuedOperations" to {statement, item -> statement.ifrs_full_DilutedEarningsLossPerShareFromDiscontinuedOperations = item.valueNumeric},
    "ifrs-full:DilutedEarningsLossPerShare" to {statement, item -> statement.ifrs_full_DilutedEarningsLossPerShare = item.valueNumeric}
)